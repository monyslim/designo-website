# Workflow Name
name: CI

# Define when to trigger the workflow
on:
  push:
    branches:
      - main

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Check out the code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 3: Install dependencies
      - name: Install Puppeteer
        run: npm install puppeteer

      # Step 4: Run QUnit tests using Puppeteer
      # Step 4: Run QUnit tests using Puppeteer
      - name: Run QUnit tests
        run: |
          mkdir -p test-reports
          node <<EOF
          const puppeteer = require('puppeteer');
          const fs = require('fs');
          (async () => {
            const browser = await puppeteer.launch({
              args: ['--no-sandbox', '--disable-setuid-sandbox'],
            });
            const page = await browser.newPage();
            page.on('console', (msg) => console.log(msg.text()));
            const results = [];
            page.on('console', (msg) => results.push(msg.text()));
            await page.goto('file://$(pwd)/index.html');
            await browser.close();
            fs.writeFileSync('test-reports/results.log', results.join('\\n'));
          })();
          EOF


      # Step 5: Upload the test report as an artifact
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-reports/results.log

      # Step 6: Install Docker Engine
      - name: Install Docker Engine
        uses: docker/setup-buildx-action@v2
        with:
          version: 'latest'

      # Step 7: Log in to Docker Hub
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 8: Build the Docker image
      - name: Build the Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/new-image:1.0.0 .

      # Step 9: Push the Docker image to Docker Hub
      - name: Push the Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/new-image:1.0.0
